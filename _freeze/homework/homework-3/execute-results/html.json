{
  "hash": "bf24698f9f1ad381bd2f77849c8f410a",
  "result": {
    "markdown": "---\ntitle: \"Homework 3: More Data Viz\"\nexecute: \n  warning: true\nfig-height: 3\nfig-width: 5\nfig-align: center\ncode-fold: false\n---\n\n\n\nWe will be using the following packages.  If any is not installed on your machine, install it by either \n\na. running the command `install.packages(package name)` in the Console or \nb. via the Packages panel --> Install --> type `package name` --> click Install.\n\n\n::: {.cell hash='homework-3_cache/html/unnamed-chunk-1_9159484effa505f802785872518c7623'}\n\n```{.r .cell-code}\n# Load required libraries\nlibrary(tidyverse)\nlibrary(openintro)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggthemes)\n```\n:::\n\n\n## Spatial Viz\n\n### Exercise 1\n\nIn this exercise, we will use the same Starbucks location data we worked with in class but on the US state-level only while taking into account the population of each state.\n\n\n\n\n::: {.cell hash='homework-3_cache/html/unnamed-chunk-2_8a381cc474da1d65bfdbb05ee35d027c'}\n\n```{.r .cell-code}\n# Import starbucks location data\nstarbucks <- read.csv(\"https://mac-stat.github.io/data/starbucks.csv\")\n```\n:::\n\n\nThe code below creates the dataset `starbucks_us_by_state` that gives the number of Starbucks in each state. \n\n\n::: {.cell hash='homework-3_cache/html/unnamed-chunk-3_2d2dd8bebe75e7a47389907798f1ecc8'}\n\n```{.r .cell-code}\nstarbucks_us_by_state <- starbucks |>\n  filter(Country == \"US\") |>\n  count(State.Province) |>\n  mutate(state_name = str_to_lower(abbr2state(State.Province)))\n```\n:::\n\n\nThe code below adds the variable `starbucks_per_10000` that gives the number of Starbucks per 10,000 people to the dataest `starbucks_with_2018_pop_est` which will be used for the spatial visualization.\n\n\n::: {.cell hash='homework-3_cache/html/unnamed-chunk-4_148661751252714913933f4bf9c243dc'}\n\n```{.r .cell-code}\ncensus_pop_est_2018 <- read_csv(\"https://mac-stat.github.io/data/us_census_2018_state_pop_est.csv\") |>\n  separate(state, into = c(\"dot\", \"state\"), extra = \"merge\") |>\n  select(-dot) |>\n  mutate(state = str_to_lower(state))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 51 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): state\ndbl (1): est_pop_2018\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nstarbucks_with_2018_pop_est <-\n  starbucks_us_by_state |>\n  left_join(census_pop_est_2018,\n    by = c(\"state_name\" = \"state\")\n  ) |>\n  mutate(starbucks_per_10000 = (n / est_pop_2018) * 10000)\n```\n:::\n\n\n#### Part a\n\nCreate a choropleth state map that shows the number of Starbucks per 10,000 people on a map of the US while taking into consideration the following instructions:\n\n- Use a new fill color palette for the states,\n- Add points for all Starbucks in the contiguous US,\n- Add an informative title for the plot, and\n- Include a caption that says who created the plot (you!).\n\n\n::: {.cell hash='homework-3_cache/html/unnamed-chunk-5_523ed6e8415c7fd5046ea71e418697b2'}\n\n```{.r .cell-code}\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n```\n:::\n\n```{.r .cell-code}\nstarbucks_data <- starbucks_with_2018_pop_est\n\nus_states <- st_as_sf(\n  maps::map(\"state\", fill = TRUE, plot = FALSE))\n\n\n\nhead(starbucks_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  State.Province    n state_name est_pop_2018 starbucks_per_10000\n1             AK   49     alaska       737438           0.6644626\n2             AL   85    alabama      4887871           0.1738998\n3             AR   55   arkansas      3013825           0.1824923\n4             AZ  488    arizona      7171646           0.6804575\n5             CA 2821 california     39557045           0.7131473\n6             CO  481   colorado      5695564           0.8445169\n```\n:::\n:::\n\n::: {.cell hash='homework-3_cache/html/unnamed-chunk-6_e4164a164cd4d81f1ce5b4cb7033d6e1'}\n\n```{.r .cell-code}\nstates_map <- map_data(\"state\")\n\nourmap <- ggplot(data = starbucks_data) +\n  geom_map(\n    map = states_map,\n    aes(map_id = state_name, fill = n)) +\n  scale_fill_gradient(low = \"lightblue\", high = \"steelblue\", name = \"Starbucks per 10,000 people\")+\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() +\n  geom_point(data= starbucks %>% filter(Country==\"US\"), aes(x=Longitude, y=Latitude), \n    alpha = 0.3, size = 0.2, color = \"hotpink\"\n  ) +\n  theme_map()\n\nourmap\n```\n\n::: {.cell-output-display}\n![](homework-3_files/figure-html/unnamed-chunk-6-1.png){width=480}\n:::\n:::\n\n#### Part b\n\nMake a conclusion about what you observe from that spatial visual.\n\n::: {.callout-note title=\"Answer\"}\n\nBased on the above spatial visual, we know that the greatest concentrations of Starbucks are located on the East and West Coasts. This is likely because some of the major cities in the US are located on the coasts, and it makes sense for bigger cities to have more franchise locations. One thing that surprises me about our map is that, though California has the largest population density and some of the greatest concentrations of starbucks locations in the country, we do not see the same for Texas -- despite the fact that Texas has the second largest population density, it does not seem to have quite as many starbucks locations relative to its population. However, though the East Coast states have a lower population density, they have a lot more starbucks locations.\n\n:::\n\n\n### Exercise 2\n\nIn this exercise, you are going to create a single Leaflet map of some of your favorite places! The end result will be one map.\n\n#### Part a\n\nCreate a data set using the tribble() function that has 10-15 rows of your favorite places. The columns will be the name of the location, the latitude, the longitude, and a column that indicates if it is in your top 3 favorite locations or not. For an example of how to use tribble(), look at the `favorite_stp` that is created manually below.\n\n\n::: {.cell hash='homework-3_cache/html/unnamed-chunk-7_7fd6f78f0ea62a7aa9c1b39f0c732b11'}\n\n```{.r .cell-code}\n# Brianna's favorite St. Paul places - Used Google Maps to get coordinates\n# https://support.google.com/maps/answer/18539?hl=en&co=GENIE.Platform%3DDesktop\nfavorite_stp <- tribble(\n  ~place, ~long, ~lat, ~favorite,\n  \"Macalester College\", -93.1712321, 44.9378965, \"yes\", \n  \"Groveland Recreation Center\", -93.1851310, 44.9351034, \"yes\",\n  \"Due Focacceria\", -93.1775469,  44.9274973, \"yes\",\n  \"Shadow Falls Park\", -93.1944518, 44.9433359, \"no\",\n  \"Mattocks Park\", -93.171057, 44.9284142, \"no\",\n  \"Carondelet Fields\", -93.1582673, 44.9251236, \"no\",\n  \"Pizza Luce\", -93.1524256, 44.9468848, \"no\",\n  \"Cold Front Ice Cream\", -93.156652, 44.9266768, \"no\"\n\n)\n```\n:::\n\n::: {.cell hash='homework-3_cache/html/unnamed-chunk-8_1713742ce23590938ff9847e9439e319'}\n\n```{.r .cell-code}\nmy_favorites <- tribble(\n  ~place, ~long, ~lat, ~favorite, \n  \"Cold Front Ice Cream\", -93.156652, 44.9266768, \"no\",\n  \"Macalester College\", -93.1712321, 44.9378965,\"no\",\n  \"Grand County Colorado\", -106, 40, \"no\",\n  \"Deering Innovation Park\", -81, 21, \"no\",\n   \"Mason's Bend Trail, NY County\", -81, 35, \"no\",\n  \"Ocean County, NJ\", -74, 40, \"no\",\n  \"Ireland\", -6, 53, \"no\",\n  \"Musée d'Orsay\", 2.3265849, 48.8599179, \"yes\",\n  \"My Best Friend's House\", -75.55272674560547, 40.13837432861328, \"yes\",\n  \"Rodeo Beach, CA\", -122.5364644, 37.8305479, \"yes\",\n  \"Berkeley High School\", -122.271379, 37.8670513, \"no\",\n  \"Eastern State Penitentiary\", -75.1726538, 39.9683436, \"no\"\n)\n```\n:::\n\n\n#### Part b\n\nCreate a map that uses circles to indicate your favorite places while taking into consideration the following instructions:\n\n- Label the circles with the name of the place. \n- Choose the base map you like best. \n- Color your 3 favorite places differently than the ones that are not in your top 3. \n- Add a legend that explains what the colors mean\n\n\n::: {.cell hash='homework-3_cache/html/unnamed-chunk-9_4b61035f8ffa034dfa265e1d215d33fb'}\n\n```{.r .cell-code}\nnames(my_favorites)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"place\"    \"long\"     \"lat\"      \"favorite\"\n```\n:::\n:::\n\n::: {.cell hash='homework-3_cache/html/unnamed-chunk-10_44f756c9fd4986ba996cc5928d9c561d'}\n\n```{.r .cell-code}\nlibrary(leaflet)\nleaflet(data = my_favorites) %>% \n  addProviderTiles(\"USGS.USImageryTopo\")%>% \n  addCircles(\n    lng = ~long,\n    lat = ~lat,\n    weight = 7,\n    opacity = 1,  # Added comma here\n    color = ifelse(my_favorites$favorite == \"yes\", \"blue\", \"pink\")\n  ) %>% \n  addLegend(\n    position = \"bottomright\", \n    colors = c(\"pink\", \"blue\"), \n    labels = c(\"Not a Top 3 Favorite\", \"Top 3 Favorite\")\n  )\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-9bc0f8e94dd0480958a6\" style=\"width:100%;height:390px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-9bc0f8e94dd0480958a6\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"USGS.USImageryTopo\",null,null,{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false}]},{\"method\":\"addCircles\",\"args\":[[44.9266768,44.9378965,40,21,35,40,53,48.8599179,40.13837432861328,37.8305479,37.8670513,39.9683436],[-93.15665199999999,-93.1712321,-106,-81,-81,-74,-6,2.3265849,-75.55272674560547,-122.5364644,-122.271379,-75.17265380000001],10,null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":true,\"color\":[\"pink\",\"pink\",\"pink\",\"pink\",\"pink\",\"pink\",\"pink\",\"blue\",\"blue\",\"blue\",\"pink\",\"pink\"],\"weight\":7,\"opacity\":1,\"fill\":true,\"fillColor\":[\"pink\",\"pink\",\"pink\",\"pink\",\"pink\",\"pink\",\"pink\",\"blue\",\"blue\",\"blue\",\"pink\",\"pink\"],\"fillOpacity\":0.2},null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null,null]},{\"method\":\"addLegend\",\"args\":[{\"colors\":[\"pink\",\"blue\"],\"labels\":[\"Not a Top 3 Favorite\",\"Top 3 Favorite\"],\"na_color\":null,\"na_label\":\"NA\",\"opacity\":0.5,\"position\":\"bottomright\",\"type\":\"unknown\",\"title\":null,\"extra\":null,\"layerId\":null,\"className\":\"info legend\",\"group\":null}]}],\"limits\":{\"lat\":[21,53],\"lng\":[-122.5364644,2.3265849]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\n\n\n## TidyTuesday\n\nTidy Tuesday is a weekly data project put on by some folks from the R Data Science community. Each week, a different data set is posted and people around the world wrangle and visualize that data. According to the organizers, \"The intent of Tidy Tuesday is to provide a safe and supportive forum for individuals to practice their wrangling and data visualization skills independent of drawing conclusions.\"\n\n\nThe goals of this TidyTuesday are:\n\n1.  Practice generating questions. You have to decide what to ask and how to answer it with a graphic.\n2.  Practice identifying what viz and (eventually) wrangling tools are useful for addressing your questions.\n4.  Get a sense of the broader data science community. Check out what people share out on [X/Twitter #TidyTuesday](https://x.com/search?q=%23TidyTuesday). Maybe even share your own #TidyTuesday work on social media. Recent Mac alum [Erin Franke (X/Twitter)](https://x.com/efranke7282) has an inspiring account! Scrolling through, you'll notice the trajectory of her work, starting from COMP/STAT 112 to today. Very cool.\n\n\n### Exercise 3\n\nGo to [TidyTuesday](https://github.com/rfordatascience/tidytuesday). Pick a dataset that was posted in **July, August, or September 2024**. Here, include:\n\n- A short (\\~2 sentence) written description of your data. This should include: \n  - the original data source, ie, where did TidyTuesday get the data from?\n  - units of observation, ie, what are you analyzing?, and \n  - the data size, ie, how many data points do you have? how many variables are measured on each data point?.\n\n- Code to import and examine the basic properties of your chosen dataset. This code must support the facts you cited in your short written description.\n\n\nThe data set I chose is about encounters with southern resident orcas in the Pacific Northwest’s Salish Sea. The data comes from the Center for Whale Research (CWR) and the units of observation are recorded encounters with orcas by CWR researchers. The data set contains 775 observations, with 19 variables being measured on each data point.\n\n\n::: {.cell hash='homework-3_cache/html/unnamed-chunk-11_16eb2f31307a0db1591bd762ab85c8d1'}\n\n```{.r .cell-code}\norcas <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-10-15/orcas.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 775 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): encounter_sequence, duration, vessel, observers, pods_or_ecotype,...\ndbl   (6): year, encounter_number, begin_latitude, begin_longitude, end_lati...\ndate  (1): date\ntime  (2): begin_time, end_time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell hash='homework-3_cache/html/unnamed-chunk-12_884038e7e9a6b0ecaf41ca7875eb5c91'}\n\n```{.r .cell-code}\ndim(orcas)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 775  19\n```\n:::\n:::\n\n\n\n### Exercise 4\n\n\nIn the 3 sections below (Viz 1, 2, 3), construct 3 separate graphs that tell a *connected* story about the data you chose.  \n\nBefore each viz:\n\n-   write a simple but specific research question you're trying to address with the viz.\n-   write a 2-4 sentence summary of what you learn from the viz. This should connect back to your research question!\n\nAfter each viz:\n\n-   Comment on at least 2 effective aspects of the viz (consider the effective visualization principles).\n-   Comment on at least 2 aspects of the visualization that could be improved. Perhaps these are aspects that you don't know how to implement yet but wish you could update it.\n\nMake sure each viz:\n\n-   has meaningful axis labels and legend titles\n-   has a figure caption (fig.cap)\n-   uses alt text (fig.alt)\n-   uses a more color-blind friendly color palette\n\n\nTips:\n\n-   Start with some questions in mind of what you want to learn.\n-   Start with a simple viz (viz 1), and build this up into something multivariate (viz 3).\n-   Reflect on each viz -- what new questions do you have after checking out the viz? Let these questions guide your next viz. (eg: recall how we worked through the `MacNaturalGas` data at the start of the Spatial Viz activity).\n\n\n#### Viz 1\n\nInvestigative Question: How long did most of these encoutners last?\n\n\n::: {.cell hash='homework-3_cache/html/unnamed-chunk-13_354f8858e1668099afb6126c6db6a251'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(data = orcas, aes(x = year)) +\n  geom_bar(color = \"white\") +  # default ggplot2 colors are considered color-blind friendly\n  labs(\n    title = \"Number of Orcas Observed Per Year\",\n    x = \"Year\",\n    y = \"Number of Recorded Encounters\",\n    caption = \"Figure 1: Orcas Observed in the Pacific Northwest’s Salish Sea by the Center for Whale Research Over the Years\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 10 rows containing non-finite outside the scale range\n(`stat_count()`).\n```\n:::\n\n::: {.cell-output-display}\n![](homework-3_files/figure-html/unnamed-chunk-13-1.png){width=480}\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n\n\n#### Viz 2\n\n\n\n::: {.cell hash='homework-3_cache/html/unnamed-chunk-14_f1d857b38b9ef068624cf66fff0a014b'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(data = orcas, aes(x = begin_longitude, y = begin_latitude, color = year)) + \n  geom_point() +  # Default colors are color-blind friendly\n  labs(\n    title = \"Orca Observations in the Pacific Northwest\",\n    x = \"Longitude\",\n    y = \"Latitude\",\n    caption = \"Figure 2: Spatial distribution of orca observations in the Salish Sea, color-coded by year.\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 53 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](homework-3_files/figure-html/unnamed-chunk-14-1.png){width=480}\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n\n\n#### Viz 3\n\n\n\n# Finalize Work\n\nCongratulation 🎉.  You're done with the homework.  See the instruction at top of the Homework Assignments page for how to submit.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/leaflet-binding-2.2.2/leaflet.js\"></script>\n<script src=\"../site_libs/leaflet-providers-2.0.0/leaflet-providers_2.0.0.js\"></script>\n<script src=\"../site_libs/leaflet-providers-plugin-2.2.2/leaflet-providers-plugin.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}